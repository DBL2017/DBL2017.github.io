<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具使用 on 生如夏花</title><link>https://DBL2017.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link><description>Recent content in 工具使用 on 生如夏花</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 09 Aug 2025 17:00:25 +0800</lastBuildDate><atom:link href="https://DBL2017.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Diagnostic</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/neovim/diagnostic/</link><pubDate>Sat, 09 Aug 2025 17:00:25 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/neovim/diagnostic/</guid><description>本文介绍了Neovim的诊断系统，它提供了一个统一框架来管理来自不同工具的代码问题反馈。诊断系统可以扩展错误处理功能，如quickfix list。诊断信息由诊断提供者产生，需要创建命名空间、设置配置参数、生成诊断信息，并通过API将诊断信息设置到当前buffer。诊断信息包含严重程度、位置、消息等字段。Nvim提供的API分为两类：一类作用于诊断生产者，一类作用于诊断消费者。诊断处理器负责渲染诊断信息，可通过`vim.diagnostic.show()`函数显示给用户。内置处理器包括virtual_text、virtual_lines、signs和underline。自定义处理器可以通过添加到`vim.diagnostic.handlers`表来实现。常用接口包括`vim.diagnostic.config()`、`vim.diagnostic.get()`和`vim.diagnostic.open_float()`，用于配置诊断信息显示、获取诊断信息和在浮动窗口中渲染诊断信息。</description><tags>Neovim 诊断系统 代码问题反馈 Diagnostic</tags><summary>&lt;p&gt;本文介绍了Neovim的诊断系统，它提供了一个统一框架来管理来自不同工具的代码问题反馈。&lt;/p&gt;
&lt;p&gt;诊断信息由诊断提供者产生，需要创建命名空间、设置配置参数、生成诊断信息，并通过API将诊断信息设置到当前buffer。&lt;/p&gt;
&lt;p&gt;诊断信息包含严重程度、位置、消息等字段。Nvim提供的API分为两类：一类作用于诊断生产者，一类作用于诊断消费者。诊断处理器负责渲染诊断信息，可通过&lt;code&gt;vim.diagnostic.show()&lt;/code&gt;函数显示给用户。&lt;/p&gt;
&lt;p&gt;内置处理器包括virtual_text、virtual_lines、signs和underline。自定义处理器可以通过添加到&lt;code&gt;vim.diagnostic.handlers&lt;/code&gt;表来实现。&lt;/p&gt;</summary></item><item><title>Makefile函数</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/makefile%E5%87%BD%E6%95%B0/</link><pubDate>Thu, 06 Mar 2025 09:59:53 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/makefile%E5%87%BD%E6%95%B0/</guid><description>本文主要记录一些Makefile中使用过的相关函数和常规用法。</description><tags>Makefile Filter Patsubst Wildcard</tags><summary>&lt;p&gt;持续记录中。。。&lt;/p&gt;
&lt;p&gt;本文主要记录一些Makefile中使用过的相关函数和常规用法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;filter&lt;/li&gt;
&lt;li&gt;wildcard&lt;/li&gt;
&lt;li&gt;patsubst&lt;/li&gt;
&lt;/ol&gt;</summary></item><item><title>WIN10上搭建samba服务器和Ubuntu虚拟机共享文件</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/win10%E4%B8%8A%E6%90%AD%E5%BB%BAsamba%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Cubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</link><pubDate>Thu, 13 Feb 2025 11:31:18 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/win10%E4%B8%8A%E6%90%AD%E5%BB%BAsamba%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Cubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</guid><description>本文和网上描述不同的一点主要在于，samba服务器搭建在Windows 10系统上，而非Ubuntu中。通过Ubuntu中配置在/etc/fstab中自动挂载命令或通过systemd脚本，将Windows中的共享文件夹开机自动挂载到Ubuntu系统中，从而实现文件共享。</description><tags>Samba 文件共享 虚拟机</tags><summary>&lt;p&gt;本文和网上描述不同的一点主要在于，samba服务器搭建在Windows 10系统上，而非Ubuntu中。通过Ubuntu中配置在/etc/fstab中自动挂载命令或通过systemd脚本，将Windows中的共享文件夹开机自动挂载到Ubuntu系统中，从而实现文件共享。&lt;/p&gt;</summary></item><item><title>nvim使用技巧</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/nvim%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 06 Jan 2025 14:15:53 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/nvim%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid><description>本文总结记录一些neovim的使用技巧。包括根据上下文判断是否扩展tab（expandtab）、在已修改的文件位置之间跳转、将选中的字符作为文件名在新标签页打开。</description><tags>NVIM</tags><summary>&lt;p&gt;本文总结记录一些neovim的使用技巧。包括根据上下文判断是否扩展tab（expandtab）、在已修改的文件位置之间跳转、将选中的字符作为文件名在新标签页打开。&lt;/p&gt;</summary></item><item><title>tmux使用方法</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/tmux%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 17 Dec 2024 22:44:11 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/tmux%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid><description>tmux是一种终端多路复用器：它可以在一个屏幕上创建、访问和控制多个终端。本文目前主要记录了一些tmux使用的快捷键和插件的使用，功能特点在于使用vi mode将内容复制到系统粘贴板，保存和恢复会话等。</description><tags>Tmux Session Window Pane</tags><summary>&lt;p&gt;tmux是一种终端多路复用器：它可以在一个屏幕上创建、访问和控制多个终端。&lt;/p&gt;
&lt;p&gt;启动tmux时，它会创建一个带有单一窗口的新会话并显示在屏幕上。 屏幕底部的状态行显示当前会话的信息，并用于输入交互式命令。&lt;/p&gt;
&lt;p&gt;本文目前主要记录了一些tmux使用的快捷键、常用配置以及插件使用方法。&lt;/p&gt;</summary></item><item><title>iptables自定义链</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/iptables%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE/</link><pubDate>Tue, 17 Dec 2024 22:39:42 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/iptables%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE/</guid><description>iptables中包含默认链、规则，同时也可以创建自定义链，用来对规则进行分类。本文介绍了如何创建、删除自定义链、规则等。</description><tags>Iptables 防火墙</tags><summary>&lt;p&gt;使用自定义链可以对规则进行分类，将特定的类放在一个链中，比如将HTTP服务的放在一个链中，SSH服务的放在另一个链中&lt;/p&gt;
&lt;p&gt;自定义链默认是不可使用的，只有被默认链引用才会生效&lt;/p&gt;</summary></item><item><title>Ubuntu24.04搭建PPPoE Server并进行拨号测试</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/ubuntu24.04%E6%90%AD%E5%BB%BApppoe-server%E5%B9%B6%E8%BF%9B%E8%A1%8C%E6%8B%A8%E5%8F%B7%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 07 Dec 2024 15:09:26 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/ubuntu24.04%E6%90%AD%E5%BB%BApppoe-server%E5%B9%B6%E8%BF%9B%E8%A1%8C%E6%8B%A8%E5%8F%B7%E6%B5%8B%E8%AF%95/</guid><description>VMWare NAT模式启用了虚拟NAT设备、虚拟DHCP服务器以及VMnet虚拟交换机，启用虚拟机的ens33网卡和宿主机VMware Network Adapter VMnet8均连接在VMnet8虚拟交换机上，两者之间通过VMnet8虚拟交换进行通信，而虚拟机通过虚拟NAT设备访问外部网络。本文在Ubuntu24.04虚拟机上搭建了PPPoE Server，Windows10虚拟机通过仅主机模式的网卡与Ubuntu24.04建立连接，然后通过拨号进行上网。</description><tags>拨号 PPPoE</tags><summary>&lt;p&gt;本文主要记录如何搭建PPPoE Server，并进行拨号连接，并不包含PPPoE协议的细节。&lt;/p&gt;
&lt;p&gt;本文在VMWare虚拟机Ubuntu24.04上搭建PPPoE Server，然后Windows10虚拟机通过PPPoE拨号获取IP，并进行上网。&lt;/p&gt;</summary></item><item><title>fdisk创建磁盘分区和扩容分区</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/fdisk%E5%88%9B%E5%BB%BA%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E5%92%8C%E6%89%A9%E5%AE%B9%E5%88%86%E5%8C%BA/</link><pubDate>Sat, 17 Aug 2024 11:19:28 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/fdisk%E5%88%9B%E5%BB%BA%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E5%92%8C%E6%89%A9%E5%AE%B9%E5%88%86%E5%8C%BA/</guid><description>使用fdisk、parted、e2fsck、resize2fs、mkfs等工具在命令行创建或修改磁盘分区。</description><tags>Linux Fdisk 磁盘分区</tags><summary>&lt;p&gt;本文主要记录一下在Linux命令行环境中如何对新磁盘进行分区并格式化，以及对已有分区如何进行扩容。&lt;/p&gt;
&lt;p&gt;使用的分区工具是&lt;code&gt;fdisk&lt;/code&gt;，格式化工具为&lt;code&gt;mkfs&lt;/code&gt;，验证的环境为&lt;code&gt;Ubuntu24.04&lt;/code&gt;虚拟机。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;parted&lt;/code&gt;工具扩容已有分区，&lt;code&gt;e2fsck&lt;/code&gt;检查文件系统是否被破坏，&lt;code&gt;resize2fs&lt;/code&gt;扩容文件系统以适应分区大小。&lt;/p&gt;</summary></item><item><title>VMware虚拟机Ubuntu24.04桥接到宿主机无线网卡上网</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/vmware%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu24.04%E6%A1%A5%E6%8E%A5%E5%88%B0%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%B8%8A%E7%BD%91/</link><pubDate>Wed, 14 Aug 2024 00:05:07 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/vmware%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu24.04%E6%A1%A5%E6%8E%A5%E5%88%B0%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%B8%8A%E7%BD%91/</guid><description>Ubuntu24.04虚拟机上使用桥接模式，桥接虚拟机网卡到Win11无线网卡上，然后通过WiFi进行上网。</description><tags>网络路由 桥接 Ubuntu VMware</tags><summary>&lt;p&gt;VMware为虚拟机提供三种上网方式，分别是桥接模式、仅主机以及NAT模式，同时会在宿主机上创建两个虚拟网卡，分别是VMnet1：仅主机模式和VMnet8：NAT模式。&lt;/p&gt;
&lt;p&gt;为什么桥接模式没有在宿主机上创建虚拟网卡呢？这是因为桥接模式是&lt;strong&gt;通过虚拟网桥将虚拟机的网卡和宿主机的网卡桥接在一起&lt;/strong&gt;的（类似于宿主机物理网卡和虚拟机网卡通过虚拟交换机连接在一起）。&lt;/p&gt;</summary></item><item><title>Win11上nvim配置文件目录路径设置</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/win11%E4%B8%8Anvim%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE/</link><pubDate>Thu, 06 Jun 2024 16:06:32 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/win11%E4%B8%8Anvim%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE/</guid><description>windows下配置neovim，包括默认配置路径init.lua或init.vim，以及插件安装位置等。</description><tags>NVIM</tags><summary>&lt;p&gt;Windows下neovim的相关配置。&lt;/p&gt;
&lt;p&gt;默认情况下nvim的配置文件位置在&lt;code&gt;~/AppData/Local/nvim/init.lua&lt;/code&gt;，如果设置了&lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;，则配置文件位置在&lt;code&gt;$XDG_CONFIG_HOME/nvim/init.lua&lt;/code&gt;。&lt;/p&gt;</summary></item><item><title>vim删除空行、行首、行尾的空格</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/nvim%E5%88%A0%E9%99%A4%E7%A9%BA%E8%A1%8C%E8%A1%8C%E9%A6%96%E8%A1%8C%E5%B0%BE%E7%9A%84%E7%A9%BA%E6%A0%BC/</link><pubDate>Mon, 03 Jun 2024 13:10:26 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/nvim%E5%88%A0%E9%99%A4%E7%A9%BA%E8%A1%8C%E8%A1%8C%E9%A6%96%E8%A1%8C%E5%B0%BE%E7%9A%84%E7%A9%BA%E6%A0%BC/</guid><description>vim、nvim删除空行、删除行首空格、删除行尾空格。</description><tags>NVIM</tags><summary>&lt;p&gt;记录一下vim操作空白字符的相关方式，现在包括删除空行、删除行首空格以及删除行尾空格。&lt;/p&gt;</summary></item><item><title>neovim设置swapfile保存路径</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/neovim/neovim%E8%AE%BE%E7%BD%AEswapfile%E4%BF%9D%E5%AD%98%E8%B7%AF%E5%BE%84/</link><pubDate>Wed, 29 May 2024 14:53:56 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/neovim/neovim%E8%AE%BE%E7%BD%AEswapfile%E4%BF%9D%E5%AD%98%E8%B7%AF%E5%BE%84/</guid><description>neovim设置缓存文件路径，nvim设置swapfile设置路径</description><tags>NVIM Swapfile</tags><summary>&lt;p&gt;本文记录了如何在neovim中配置自定义的swapfile路径。&lt;/p&gt;
&lt;p&gt;Lua配置：&lt;code&gt; vim.go.directory = vim.fn.expand('~/.nvim/swapfiles//') .. ',!,'&lt;/code&gt;&lt;/p&gt;</summary></item><item><title>codebrowser之从浏览器阅读源码</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/codebrowser%E4%B9%8B%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E9%98%85%E8%AF%BB%E6%BA%90%E7%A0%81/</link><pubDate>Wed, 13 Mar 2024 15:58:33 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/codebrowser%E4%B9%8B%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E9%98%85%E8%AF%BB%E6%BA%90%E7%A0%81/</guid><description>基于WEB的源码阅读CodeBrowser的使用</description><tags>C语言 工具使用 源码阅读</tags><summary>&lt;p&gt;codebrowser能够对源码生成静态HTML网页，搭配nginx可以在WEB上浏览源码。&lt;/p&gt;
&lt;p&gt;支持功能如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;代码跳转。&lt;/li&gt;
&lt;li&gt;代码高亮。&lt;/li&gt;
&lt;li&gt;代码提示。&lt;/li&gt;
&lt;/ol&gt;</summary></item><item><title>WIN11搭建NFS-Server在开发板与Linux间共享数据</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/win11%E6%90%AD%E5%BB%BAnfs-server%E5%9C%A8%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%8Elinux%E9%97%B4%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE/</link><pubDate>Tue, 12 Mar 2024 22:31:29 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/win11%E6%90%AD%E5%BB%BAnfs-server%E5%9C%A8%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%8Elinux%E9%97%B4%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE/</guid><description>本文通过使用NFS Server工具在WIN11上搭建NFS Server，打通Linux开发环境到嵌入式板子之间的通路，优化Linux服务器与嵌入式板子之间的多次SCP拷贝操作。</description><tags>Linux NFS NFSServer 开发板 WIN11</tags><summary>&lt;p&gt;本文通过使用NFS Server工具在WIN11上搭建NFS Server，打通Linux开发环境到嵌入式板子之间的通路，优化Linux服务器与嵌入式板子之间的多次SCP拷贝操作。&lt;/p&gt;
&lt;p&gt;Windows下的NFS Server工具来自于&lt;a href="https://www.hanewin.net/index.html"&gt;Networking Software for Windows (hanewin.net)&lt;/a&gt;&lt;/p&gt;</summary></item><item><title>uptime</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/linux%E5%91%BD%E4%BB%A4/uptime/</link><pubDate>Tue, 20 Jun 2023 09:36:05 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/linux%E5%91%BD%E4%BB%A4/uptime/</guid><description/><tags>Linux命令 Uptime 负载</tags><summary>&lt;p&gt;告诉当前用户系统的运行时长。&lt;/p&gt;
&lt;p&gt;用法：&lt;code&gt;uptime [options]&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ubuntu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ uptime
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;09:39:24 up &lt;span class="m"&gt;266&lt;/span&gt; days, 15:14, &lt;span class="m"&gt;9&lt;/span&gt; users, load average: 0.04, 0.11, 0.15
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ nproc
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# busybox&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ uptime
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;01:39:51 up 8:39, load average: 0.71, 0.72, 0.69
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ nproc
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary></item><item><title>LSP</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/neovim/lsp/</link><pubDate>Fri, 18 Nov 2022 23:30:45 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/neovim/lsp/</guid><description/><tags>NVIM LSP</tags><summary>&lt;p&gt;什么是 LSP（Language Server Protocol）？&lt;/p&gt;
&lt;p&gt;LSP 如何工作？&lt;/p&gt;
&lt;p&gt;neovim 是怎么支持 LSP 的以及要如何配置 LSP？&lt;/p&gt;
&lt;p&gt;nvim-lspconfig，mason 等插件的安装配置。&lt;/p&gt;</summary></item><item><title>Mermaid使用方式</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/mermaid/</link><pubDate>Wed, 23 Feb 2022 17:57:18 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/mermaid/</guid><description/><tags>Mermaid</tags><summary>&lt;p&gt;&lt;code&gt;Mermaid&lt;/code&gt;是基于&lt;code&gt;Javascript&lt;/code&gt;的一个图标可视化工具，可以使您基于代码创建图表。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Mermaid&lt;/code&gt;的一个在线编辑站，&lt;a href="https://mermaid-js.github.io/mermaid-live-editor"&gt;在线编辑Mermaid&lt;/a&gt;。&lt;/p&gt;</summary></item><item><title>vim 配置文件</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/vim/vim_%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link><pubDate>Wed, 23 Feb 2022 15:33:17 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/vim/vim_%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid><description/><tags>Vim配置 Tool</tags><summary>&lt;p&gt;下面是vim的配置文件，使用时需要将其拷贝到用户目录下，然后安装&lt;code&gt;vundle&lt;/code&gt;插件管理器（&lt;code&gt;git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim&lt;/code&gt;），最后启动&lt;code&gt;vim&lt;/code&gt;执行&lt;code&gt;PluginInstall&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当前已经配置的插件有&lt;code&gt;NerdTree&lt;/code&gt;、&lt;code&gt;YCM&lt;/code&gt;、&lt;code&gt;ALE&lt;/code&gt;、&lt;code&gt;airline&lt;/code&gt;等&lt;/p&gt;</summary></item><item><title>编写Recipe</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/%E7%BC%96%E5%86%99recipe/</link><pubDate>Thu, 27 Jan 2022 23:46:08 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/%E7%BC%96%E5%86%99recipe/</guid><description/><tags>Makefile</tags><summary>&lt;p&gt;规则中的&lt;code&gt;recipe&lt;/code&gt;由一条或多条&lt;code&gt;shell&lt;/code&gt;命令组成， 并会按照顺序执行。&lt;/p&gt;
&lt;p&gt;通常，这些命令执行的结果就是更新&lt;code&gt;target&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Linux用户可以使用多种不同的&lt;code&gt;shell&lt;/code&gt;程序，但&lt;code&gt;Makefile&lt;/code&gt;中的&lt;code&gt;recipe&lt;/code&gt;是由&lt;code&gt;/bin/sh&lt;/code&gt;来解释。&lt;/p&gt;</summary></item><item><title>Makefile规则</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/makefile%E8%A7%84%E5%88%99/</link><pubDate>Thu, 27 Jan 2022 23:10:05 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/makefile%E8%A7%84%E5%88%99/</guid><description>编写规则</description><tags>Makefile</tags><summary>&lt;p&gt;&lt;code&gt;Makefile&lt;/code&gt;中的规则是为了说明何时以及如何生成&lt;code&gt;target&lt;/code&gt;，规则列出了&lt;code&gt;target&lt;/code&gt;的&lt;code&gt;prerequisites&lt;/code&gt;和&lt;code&gt;recipe&lt;/code&gt;。&lt;/p&gt;</summary></item><item><title>编写Makefile</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/%E7%BC%96%E5%86%99makefile/</link><pubDate>Thu, 27 Jan 2022 23:09:37 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/%E7%BC%96%E5%86%99makefile/</guid><description>编写Makefile</description><tags>Makefile</tags><summary>&lt;p&gt;&lt;code&gt;Makefiles&lt;/code&gt;中包含5种内容，分别是显式规则、隐含规则、变量定义、指令以及注释。&lt;/p&gt;</summary></item><item><title>Makefile简介</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/makefile%E7%AE%80%E4%BB%8B/</link><pubDate>Thu, 27 Jan 2022 23:08:58 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/makefile%E7%AE%80%E4%BB%8B/</guid><description>Makefile简介</description><tags>Makefile</tags><summary>&lt;p&gt;&lt;code&gt;Makefile&lt;/code&gt;文件告诉&lt;code&gt;make&lt;/code&gt;如何编译和链接一个程序。&lt;/p&gt;</summary></item><item><title>GNU Make简介</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/gnu-make%E7%AE%80%E4%BB%8B/</link><pubDate>Thu, 27 Jan 2022 23:07:25 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/makefile/gnu-make%E7%AE%80%E4%BB%8B/</guid><description>GNU Make是一个可以自动运行shell命令并帮助执行重复任务的程序。它通常用于将文件转换成其他形式，例如将源代码文件编译成程序或库。它通过跟踪先决条件和执行命令层次结构来生成目标来实现这一点。</description><tags>Makefile</tags><summary>&lt;p&gt;&lt;code&gt;make&lt;/code&gt;能够自动识别大型应用程序中哪些部分需要重新编译，并且会自动编译它们。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;并不局限于&lt;code&gt;C&lt;/code&gt;语言，任何语言的编译器可以通过&lt;code&gt;shell&lt;/code&gt;命令执行，那就可以使用&lt;code&gt;make&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;不仅仅用于应用程序，它也适用于其他任务，该任务中的某些文件必须在其他文件发生改动时自动更新。&lt;/p&gt;</summary></item><item><title>vim 使用指南</title><link>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/vim/vim-guide/</link><pubDate>Fri, 06 Aug 2021 11:57:50 +0800</pubDate><guid>https://DBL2017.github.io/post/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/vim/vim-guide/</guid><description/><tags>Tool Vim 编辑器</tags><summary>&lt;p&gt;vim使用指南、相关配置以及插件管理vim-plug、Vundle、NERDTree、NERD Commenter、YouCompleteMe以及配色方案solarized和molokai等&lt;/p&gt;</summary></item></channel></rss>