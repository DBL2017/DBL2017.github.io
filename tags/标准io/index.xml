<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>标准IO on 生如夏花</title><link>https://DBL2017.github.io/tags/%E6%A0%87%E5%87%86io/</link><description>Recent content in 标准IO on 生如夏花</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 23 Mar 2022 20:56:44 +0800</lastBuildDate><atom:link href="https://DBL2017.github.io/tags/%E6%A0%87%E5%87%86io/index.xml" rel="self" type="application/rss+xml"/><item><title>标准IO</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E6%A0%87%E5%87%86io/</link><pubDate>Wed, 23 Mar 2022 20:56:44 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E6%A0%87%E5%87%86io/</guid><description>标准IO是以流为基本对象的。</description><tags>APUE Unix 文件 标准IO Unix环境高级编程</tags><summary>&lt;p>标准I/O库由ISO C标准制定的。标准I/O库相对于系统I/O处理了很多细节，比如缓冲区分配、以优化的块大小执行I/O（这个数据存储在&lt;code>stat&lt;/code>结构体中的&lt;code>st_blksize&lt;/code>字段）等。&lt;/p>
&lt;p>系统I/O是以文件描述符来作为基础展开的，而标准I/O是围绕流进行的，打开或创建文件时会将流和文件关联起来。&lt;/p>
&lt;p>获取与流相关的文件描述符可以使用函数&lt;code>fileno()&lt;/code>。&lt;/p>
&lt;p>&lt;strong>流和文件相关联为文件流，流和内存关联起来为内存流。&lt;/strong>&lt;/p></summary></item></channel></rss>