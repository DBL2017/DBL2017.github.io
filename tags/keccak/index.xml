<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Keccak on 生如夏花</title><link>https://DBL2017.github.io/tags/keccak/</link><description>Recent content in Keccak on 生如夏花</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 16 May 2023 22:46:08 +0800</lastBuildDate><atom:link href="https://DBL2017.github.io/tags/keccak/index.xml" rel="self" type="application/rss+xml"/><item><title>单向散列函数</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</link><pubDate>Tue, 16 May 2023 22:46:08 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</guid><description/><tags>图解密码技术 认证 单向散列函数 SHA SHA-256 SHA3 MD5 Keccak</tags><summary>&lt;p&gt;单向散列函数能够根据任意长度的消息计算出固定长度的散列值，通过对比散列值可以判断两条消息是否一致，这种技术可用来辨别篡改。&lt;/p&gt;
&lt;p&gt;SHA-3的具体实现方法。&lt;/p&gt;
&lt;p&gt;针对单向散列函数的工具：暴力破解和生日攻击。&lt;/p&gt;
&lt;p&gt;使用单向散列函数可以辨别篡改，但无法分辨伪装。要解决这个问题，需要使用消息认证码和数字签名。&lt;/p&gt;</summary></item></channel></rss>