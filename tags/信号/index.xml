<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>信号 on 生如夏花</title><link>https://DBL2017.github.io/tags/%E4%BF%A1%E5%8F%B7/</link><description>Recent content in 信号 on 生如夏花</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 17 Mar 2024 18:37:49 +0800</lastBuildDate><atom:link href="https://DBL2017.github.io/tags/%E4%BF%A1%E5%8F%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>多线程环境下信号处理</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/</link><pubDate>Sun, 17 Mar 2024 18:37:49 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/</guid><description>本文介绍了线程对信号的处理方式，一是共享信号处理行为，二是信号递送给单个线程。同时介绍了线程对信号处理的函数用法，包括`pthread_sigmask`、`sigwait`以及`pthread_kill`等。</description><tags>信号 多线程 Pthread_sigmask Sigwait Pthread_kill</tags><summary>&lt;p&gt;多线程环境下需要使用互斥量等数据来进行线程间数据同步，然而同时使用同步对象与信号处理很容易造成死锁，本文探索如何在多线程环境下来进行信号处理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在多线程环境中，为了防止信号中断线程，通常把信号加到每个线程的信号屏蔽字中。然后安排专用线程来处理信号&lt;/strong&gt;。&lt;/p&gt;</summary></item><item><title>信号集及相关函数</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E4%BF%A1%E5%8F%B7%E9%9B%86%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/</link><pubDate>Tue, 16 Jan 2024 23:18:13 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E4%BF%A1%E5%8F%B7%E9%9B%86%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/</guid><description/><tags>APUE Unix 信号 Unix环境高级编程 信号集 Sigset_t</tags><summary>&lt;p&gt;&lt;strong&gt;信号集&lt;/strong&gt;（&lt;code&gt;sigset_t&lt;/code&gt;）是表示多个信号的数据类型。&lt;/p&gt;
&lt;p&gt;不同的信号编号可能会超过一个整型量的位数，所以不能用整型量中的一位代表一个信号。&lt;/p&gt;
&lt;p&gt;POSIX.1定义数据类型&lt;code&gt;sigset_t&lt;/code&gt;用以表示信号集，并定义了信号的操作函数。&lt;/p&gt;</summary></item><item><title>可靠信号</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E5%8F%AF%E9%9D%A0%E4%BF%A1%E5%8F%B7/</link><pubDate>Sun, 14 Jan 2024 23:18:50 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E5%8F%AF%E9%9D%A0%E4%BF%A1%E5%8F%B7/</guid><description/><tags>APUE Unix 信号 Unix环境高级编程 可靠信号 信号递送 Kill Pause Alarm</tags><summary>&lt;p&gt;可靠信号的处理有两个过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;信号产生&lt;/strong&gt;：当这些事件（&lt;strong&gt;硬件异常（如除以0）、软件条件（如alarm定时器超时）、终端产生的信号或调用&lt;code&gt;kill&lt;/code&gt;函数&lt;/strong&gt;）发生时，内核会为进程产生一个信号，同时在进程表中设置一个标志。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信号递送&lt;/strong&gt;：内核使&lt;strong&gt;目标进程对该信号作出反应&lt;/strong&gt;称为信号递送：或是改变目标进程的执行状态（默认动作），或是开始执行信号处理程序，或两者都是。&lt;/li&gt;
&lt;/ol&gt;</summary></item><item><title>不可靠信号的相关问题</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E4%B8%8D%E5%8F%AF%E9%9D%A0%E4%BF%A1%E5%8F%B7%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 12 Jan 2024 21:10:43 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E4%B8%8D%E5%8F%AF%E9%9D%A0%E4%BF%A1%E5%8F%B7%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid><description/><tags>APUE Unix 信号 Unix环境高级编程 不可靠信号 信号丢失</tags><summary>&lt;p&gt;不可靠信号指的是信号可能会丢失，不支持信号阻塞，不能控制是否重启中断的系统调用等等。&lt;/p&gt;
&lt;p&gt;下面是不可靠信号可能会出现的问题：&lt;/p&gt;</summary></item><item><title>信号概述</title><link>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E4%BF%A1%E5%8F%B7%E6%A6%82%E8%BF%B0/</link><pubDate>Wed, 10 Jan 2024 21:10:43 +0800</pubDate><guid>https://DBL2017.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/apue/%E4%BF%A1%E5%8F%B7%E6%A6%82%E8%BF%B0/</guid><description/><tags>APUE Unix 信号 Unix环境高级编程</tags><summary>&lt;p&gt;信号是软件中断。&lt;/p&gt;
&lt;p&gt;信号提供了一种处理异步事件的方法。&lt;/p&gt;
&lt;p&gt;信号用于大多数复杂的应用程序中。&lt;/p&gt;
&lt;p&gt;Unix系统的早期版本就已经提供了信号机制，但不可靠。POSIX.1对可靠信号例程进行了标准化。&lt;/p&gt;</summary></item></channel></rss>