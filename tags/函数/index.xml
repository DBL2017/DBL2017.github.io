<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>函数 on 生如夏花</title><link>https://DBL2017.github.io/tags/%E5%87%BD%E6%95%B0/</link><description>Recent content in 函数 on 生如夏花</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 17 Feb 2025 21:37:18 +0800</lastBuildDate><atom:link href="https://DBL2017.github.io/tags/%E5%87%BD%E6%95%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>函数</title><link>https://DBL2017.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/lua/%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 17 Feb 2025 21:37:18 +0800</pubDate><guid>https://DBL2017.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/lua/%E5%87%BD%E6%95%B0/</guid><description>从Lua语言的数据类型可以看出，函数function是一个值的类型，这个值可以赋给变量，变量名就被成为函数名，因此对函数重命名是很容易的，赋给其他变量即可。同时Lua中函数还有一点比较特别，即可以返回多个值，但是什么情况下返回多个值需要具体分析。</description><tags>Lua 函数 闭包</tags><summary>&lt;p&gt;Lua语言中函数本质上是一个&lt;code&gt;function&lt;/code&gt;类型的值。这个值可以作为表达式的一部分，也可以被赋予变量。当被赋予变量时，变量名则为函数名。&lt;/p&gt;
&lt;p&gt;由于&lt;strong&gt;函数是一个值&lt;/strong&gt;，因此Lua中函数都是匿名的，所谓的&lt;strong&gt;函数名则是保存函数值的变量&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;闭包指的是一个函数和该函数能够访问其外部作用域的局部变量的机制&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;函数和闭包的区别在于，函&lt;strong&gt;数是没有访问外部作用域的局部变量的闭包&lt;/strong&gt;。&lt;/p&gt;</summary></item></channel></rss>