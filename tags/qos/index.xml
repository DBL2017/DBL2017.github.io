<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>QoS on 生如夏花</title><link>https://DBL2017.github.io/tags/qos/</link><description>Recent content in QoS on 生如夏花</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 18 Jul 2023 23:29:49 +0800</lastBuildDate><atom:link href="https://DBL2017.github.io/tags/qos/index.xml" rel="self" type="application/rss+xml"/><item><title>MQTT服务质量</title><link>https://DBL2017.github.io/post/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/mqtt/mqtt%E6%9C%8D%E5%8A%A1%E8%B4%A8%E9%87%8F/</link><pubDate>Tue, 18 Jul 2023 23:29:49 +0800</pubDate><guid>https://DBL2017.github.io/post/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/mqtt/mqtt%E6%9C%8D%E5%8A%A1%E8%B4%A8%E9%87%8F/</guid><description>MQTT的消息服务质量QoS，包含QoS0，QoS1以及QoS2，设计报文有PUBLISH、PUBACK、PUBREC、PUBCOMP等。解释了为什么QoS2会保证消息不重复并确保一次。</description><tags>传输协议 MQTT QoS 服务质量 QoS1 QoS2 QoS0</tags><summary>&lt;p&gt;MQTT Quality of Service（QoS，服务质量）是消息发送者和接收者之间的协议，用于定义消息的传递保证级别。&lt;/p&gt;
&lt;p&gt;QoS具有3个级别，分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最多一次（QoS 0）&lt;/li&gt;
&lt;li&gt;至少一次（QoS 1）&lt;/li&gt;
&lt;li&gt;确定一次（QoS 2）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中涉及的MQTT报文有四种，分别是PUBLISH、PUBACK、PUBREC以及PUBCOMP。&lt;/p&gt;</summary></item><item><title>MQTT简介</title><link>https://DBL2017.github.io/post/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/mqtt/mqtt%E7%AE%80%E4%BB%8B/</link><pubDate>Wed, 12 Jul 2023 20:10:13 +0800</pubDate><guid>https://DBL2017.github.io/post/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/mqtt/mqtt%E7%AE%80%E4%BB%8B/</guid><description/><tags>传输协议 MQTT MQTT3.1.1 MQTT5 消息模型 主题 订阅 QoS 持久会话</tags><summary>&lt;p&gt;MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议）是一个&lt;strong&gt;基于C/S架构的发布/订阅模式的消息传输协议&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;目的是&lt;strong&gt;在带宽和连接有限的不可靠网络的环境下发送少量数据&lt;/strong&gt;，设计思想是轻量、开放、简单并且易于实现。&lt;/p&gt;
&lt;p&gt;这些特性使得MQTT非常适合在受限的环境的环境中使用，比如机器对机器(M2M)通信和物联网(IoT)。&lt;/p&gt;</summary></item></channel></rss>